name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # prettier-ignore
        include:
          - {host: mac,     target: desktop, qt-version: "6.5.3",  arch: clang_64}
          - {host: mac,     target: desktop, qt-version: "6.7.2",  arch: clang_64}
          - {host: windows, target: desktop, qt-version: "5.15.2", arch: win64_msvc2019_64}
          - {host: windows, target: desktop, qt-version: "5.15.2", arch: win32_msvc2019}
          - {host: windows, target: desktop, qt-version: "6.5.3",  arch: win64_msvc2019_64}
          - {host: windows, target: desktop, qt-version: "6.7.2",  arch: win64_msvc2019_64}
          - {host: linux,   target: desktop, qt-version: "5.15.2", arch: gcc_64}
          - {host: linux,   target: desktop, qt-version: "6.5.3",  arch: gcc_64}
          - {host: linux,   target: desktop, qt-version: "6.7.2",  arch: linux_gcc_64}

    runs-on: ${{ format('{0}-latest', (matrix.host == 'mac' && 'macos') || (matrix.host == 'linux' && 'ubuntu') || matrix.host) }}
    env:
      APNG_FLAGS: ${{ format('-DAPNG_TESTS=On -DAPNG_EXAMPLES=On -DAPNG_QT6={0} -DCMAKE_BUILD_TYPE=Release', startsWith(matrix.qt-version, '6') && 'On' || 'Off') }}
      ARTIFACT_NAME: ${{ matrix.host == 'mac' && 'libqapng.dylib' || matrix.host == 'linux' && 'libqapng.so' || matrix.host == 'windows' && 'qapng.dll' || 'NO_NAME' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{matrix.qt-version}}
          host: ${{matrix.host}}
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}

      - name: Enable Developer Command Prompt (Windows)
        if: matrix.host == 'windows'
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: ${{ startsWith(matrix.arch, 'win32') && 'x86' || 'x64' }}

      - name: Configure (Windows)
        if: matrix.host == 'windows'
        run: |
          cmake -B build -A ${{ startsWith(matrix.arch, 'win32') && 'Win32' || 'x64' }} ${{ env.APNG_FLAGS }}

      - name: Configure (macOS)
        if: matrix.host == 'mac'
        run: |
          cmake -B build-arm64 -DCMAKE_OSX_ARCHITECTURES=arm64 ${{ env.APNG_FLAGS }}
          cmake -B build-x86_64 -DCMAKE_OSX_ARCHITECTURES=x86_64 ${{ env.APNG_FLAGS }}

      - name: Configure (Linux)
        if: matrix.host == 'linux'
        run: |
          cmake -B build ${{ env.APNG_FLAGS }}

      - name: Build (Windows/Linux)
        if: matrix.host != 'mac'
        run: cmake --build build

      - name: Build (macOS)
        if: matrix.host == 'mac'
        run: |
          cmake --build build-arm64
          cmake --build build-x86_64

          mkdir -p build/plugins/imageformats && cd build

          lipo -create \
            ../build-arm64/plugins/imageformats/libqapng.dylib \
            ../build-x86_64/plugins/imageformats/libqapng.dylib \
            -output ./plugins/imageformats/libqapng.dylib
          lipo -info ./plugins/imageformats/libqapng.dylib

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.host}}-${{matrix.target}}-${{matrix.arch}}-${{matrix.qt-version}}-${{env.ARTIFACT_NAME}}
          path: build/plugins/imageformats/${{env.ARTIFACT_NAME}}

  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/release')

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Create Directory
        run: mkdir release-artifacts

      - uses: actions/download-artifact@v4
        with:
          path: release-artifacts
          merge-multiple: true

      - name: Show Artifacts
        run: ls -R release-artifacts

      - name: Create release
        uses: ncipollo/release-action@v1.14.0
        with:
          replacesArtifacts: true
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: "release-artifacts/*"
          body: ${{ github.event.head_commit.message }}
          prerelease: true
          name: Continuous Build
          tag: cont

      - name: Update cont tag
        run: |
          git tag -f cont
          git push -f origin cont
